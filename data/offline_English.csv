task_id,category,task_language,task_apps,task_template,task_instantiation
1,Simple Concatenation,English,"['Settings', 'Camera']","Turn on WiFi, then take one photo.","Turn on WiFi, then take one photo."
2,Simple Concatenation,English,"['Settings', 'Retro Music']","Turn the brightness to the maximum level, then create a playlist in Retro Music titled [playlist_name] with the songs [song 1] and [song 2]","Turn the brightness to the maximum level, then create a playlist in Retro Music titled ""Urban Vibes"" with the songs ""Blinding Lights"" and ""Die For You (Remix)"""
3,Simple Concatenation,English,"['Settings', 'Audio Recorder']","Turn on Bluetooth, then record an audio clip and save it with name ""[Audio Name]"" using Audio Recorder app.","Turn on Bluetooth, then record an audio clip and save it with name ""NexusAudio"" using Audio Recorder app."
4,Simple Concatenation,English,"['Broccoli Recipe App', 'Tasks App']","In Broccoli recipe app, add a new recipe titled ""[Recipe Name]"" with description ""[Recipe Description]"", then create a task titled ""Buy ingredients for [Recipe Name]."" in the Tasks app.","In Broccoli recipe app, add a new recipe titled ""Avocado Toast"" with description ""Cook Avocado Toast with Avocado, Bread and Salt"", then create a task titled ""Buy ingredients for Avocado Toast."" in the Tasks app."
5,Simple Concatenation,English,"['Broccoli Recipe App', 'Simple Draw Pro']","In Broccoli recipe app, delete the recipe titled ""[Recipe Name]"". Then create a new drawing named ""[Picture Name].png"" in Simple Draw Pro and save it in the Pictures folder within the sdk_gphone_arm64 storage area.","In Broccoli recipe app, delete the recipe titled ""Pasta Salad"". Then create a new drawing named ""nexus_pic.png"" in Simple Draw Pro and save it in the Pictures folder within the sdk_gphone_arm64 storage area."
6,Simple Concatenation,English,"['File Manager', 'Markor']","In the Android filesystem, move the file ""[File Name].txt"" from the ""Documents"" folder within the sdk_gphone_arm64 storage storage area to the ""Archive"" folder within the sdk_gphone_arm64 storage storage area, and delete the note named ""old_note.md"" in Markor.","In the Android filesystem, move the file ""notes.txt"" from the ""Documents"" folder within the sdk_gphone_arm64 storage storage area to the ""Archive"" folder within the sdk_gphone_arm64 storage storage area, and delete the note named ""old_note.md"" in Markor."
7,Simple Concatenation,English,"['Markor', 'Clock App']","Delete all notes in Markor, then pause the stopwatch in the Clock app.","Delete all notes in Markor, then pause the stopwatch in the Clock app."
8,Simple Concatenation,English,"['OsmAnd Maps', 'File Manager']","Add a favorite location marker for [Location 1], [Location 2] in the OsmAnd maps app. Then in file manager, find ""[File Name].png"" in the ""Pictures"" folder within the sdk_gphone_arm64 storage storage area, and delete it.","Add a favorite location marker for 47.1303814, 9.5930117 in the OsmAnd maps app. Then in file manager, find ""profile_v1.png"" in the ""Pictures"" folder within the sdk_gphone_arm64 storage storage area, and delete it."
9,Simple Concatenation,English,"['Settings', 'arduia Pro Expense']","Turn WiFi off in Settings, then delete the expenses ""[Event Name 1]"" and ""[Event Name 2]"" in the arduia pro expense.","Turn WiFi off in Settings, then delete the expenses ""Snack Purchase"" and ""Grocery Shopping"" in the arduia pro expense."
10,Simple Concatenation,English,"['Contacts App', 'Markor']","Create and save a new contact with first name ""[Name 1]"", last name ""[Name 2]"", phone ""[Phone Number 1]"", phone label ""[Label 1]"" in the Contacts app. Then create a note named ""ContactCreated.md"" with the text ""Contact [Name 1] [Name 2] saved."" in Markor.","Create and save a new contact with first name ""John"", last name ""Doe"", phone ""111222333"", phone label ""Work"" in the Contacts app. Then create a note named ""ContactCreated.md"" with the text ""Contact John Doe saved."" in Markor."
11,Simple Concatenation,English,"['VLC', 'Markor']","Create two playlists in VLC: [playlist 1] with files [video1] and [video 2], and [playlist 2] with files [video 3] and [video 4] (the .mp4 files are located in Internal Memory/VLCVideos); finally, create a folder named ""Drafts"" in markor.","Create two playlists in VLC: ""Feel Good Hits"" with files ""CountingStars.mp4"" and ""LoveStory.mp4"", and ""Classic Vibes"" with files ""HeyJude.mp4"" and ""Yesterday.mp4"" (the .mp4 files are located in Internal Memory/VLCVideos); finally, create a folder named ""Drafts"" in markor."
12,Simple Concatenation,English,"['Simple Calendar Pro', 'Simple SMS Messenger']","In Simple Calendar Pro, create an event for April 15th at 11h titled ""Call with [Name 1]"" lasting 20 minutes; then reply to the most recent message with ""Call scheduled at 11h"" in Simple SMS Messenger.","In Simple Calendar Pro, create an event for April 15th at 11h titled ""Call with Client"" lasting 20 minutes; then reply to the most recent message with ""Call scheduled at 11h"" in Simple SMS Messenger."
13,Simple Concatenation,English,"['Clock App', 'Retro Music']","In the Clock app, set a timer for 25 minutes without starting it, then play the album 'Focus Beats' in Retro Music.","In the Clock app, set a timer for 25 minutes without starting it, then play the album 'Focus Beats' in Retro Music."
14,Simple Concatenation,English,"['Markor', 'Audio Recorder']",Delete the newest note in Markor. Then record an audio clip using Audio Recorder app and save it.,Delete the newest note in Markor. Then record an audio clip using Audio Recorder app and save it.
15,Simple Concatenation,English,"['Tasks App', 'Broccoli Recipe App']","In the Tasks app, create and save a new task named '[Event Name]' repeating every day. Then open the Broccoli recipe app and delete the '[Recipe Name]' recipe.","In the Tasks app, create and save a new task named 'Exercise' repeating every day. Then open the Broccoli recipe app and delete the 'French Fries' recipe."
16,Simple Concatenation,English,"['Settings', 'Simple SMS Messenger']","Turn on Bluetooth, then open the Simple SMS Messenger app and send a text message to [Phone Number 1] with the message: ""Nice to meet you [Name 1]!""","Turn on Bluetooth, then open the Simple SMS Messenger app and send a text message to 987654321 with the message: ""Nice to meet you Yuan!"""
17,Simple Concatenation,English,"['Broccoli Recipe App', 'Tasks App']","Add the following recipe into the broccoli app: Recipe: Chicken Caesar Salad Wrap description: An ideal recipe for experimenting with different flavors and ingredients servings: 3-4 servings preparationTime: 2 hrs ingredients: as desired directions: Toss chopped romaine lettuce with Caesar dressing, grilled chicken strips, and Parmesan cheese. Wrap in a large tortilla. Feel free to substitute with ingredients you have on hand. And create a task titled ""Buy ingredients for Avocado Toast."" in the Tasks app.","Add the following recipe into the broccoli app: Recipe: Chicken Caesar Salad Wrap description: An ideal recipe for experimenting with different flavors and ingredients servings: 3-4 servings preparationTime: 2 hrs ingredients: as desired directions: Toss chopped romaine lettuce with Caesar dressing, grilled chicken strips, and Parmesan cheese. Wrap in a large tortilla. Feel free to substitute with ingredients you have on hand. And create a task titled ""Buy ingredients for Avocado Toast."" in the Tasks app."
18,Simple Concatenation,English,"['Clock App', 'Settings', 'Simple SMS Messenger']","Define a subworkflow ""NightCheck"": (1) pause the stopwatch, (2) turn off Bluetooth, (3) turn off WiFi. Run ""NightCheck"", then in Simple SMS Messenger, send a message to [Name 1] saying ""Good night""","Define a subworkflow ""NightCheck"": (1) pause the stopwatch, (2) turn off Bluetooth, (3) turn off WiFi. Run ""NightCheck"", then in Simple SMS Messenger, send a message to Yuan saying ""Good night"""
19,Simple Concatenation,English,"['Simple SMS Messenger', 'Tasks App', 'Markor']","Define a subworkflow ""SendReminder"": (1) In Simple SMS Messenger, send a message to [Name 1] saying ""Reminder: Meeting tomorrow at 10 AM"", (2) In Tasks app, create a task titled ""Follow up with [Name 1]"" with high priority and due date tomorrow. Execute ""SendReminder"" for: (contact = ""[Name 1]""), (contact = ""[Name 2]""), (contact = ""[Name 3]""). After all reminders have been sent and tasks created, create a note named ""ReminderSentLog.md"" in Markor with exactly the following content: # Reminder Sent Log - Contact: [Name 1] SMS Sent: ""Reminder: Meeting tomorrow at 10 AM"" Task Created: ""Follow up with [Name 1]"" - Contact: [Name 2] SMS Sent: ""Reminder: Meeting tomorrow at 10 AM"" Task Created: ""Follow up with [Name 2]"" - Contact: [Name 3] SMS Sent: ""Reminder: Meeting tomorrow at 10 AM"" Task Created: ""Follow up with [Name 3]""","Define a subworkflow ""SendReminder"": (1) In Simple SMS Messenger, send a message to {contact} saying ""Reminder: Meeting tomorrow at 10 AM"", (2) In Tasks app, create a task titled ""Follow up with {contact}"" with high priority and due date tomorrow. Execute ""SendReminder"" for: (contact = ""John Doe""), (contact = ""Alice Smith""), (contact = ""Charlie Brown""). After all reminders have been sent and tasks created, create a note named ""ReminderSentLog.md"" in Markor with exactly the following content: # Reminder Sent Log - Contact: John Doe SMS Sent: ""Reminder: Meeting tomorrow at 10 AM"" Task Created: ""Follow up with John Doe"" - Contact: Alice Smith SMS Sent: ""Reminder: Meeting tomorrow at 10 AM"" Task Created: ""Follow up with Alice Smith"" - Contact: Charlie Brown SMS Sent: ""Reminder: Meeting tomorrow at 10 AM"" Task Created: ""Follow up with Charlie Brown"""
20,Simple Concatenation,English,"['Contacts App', 'Simple SMS Messenger', 'Tasks App']","Define a subworkflow ""ContactAndGreet"": (1) create a new contact for [Name 1] with phone number [Phone Number 1], (2) in Simple SMS Messenger, send an SMS to [Phone Number 1] saying ""Hello [Name 1], welcome"", then create a task titled ""Contacts greeted"" in the Tasks app.","Define a subworkflow ""ContactAndGreet"": (1) create a new contact for {name} with phone number {number}, (2) in Simple SMS Messenger, send an SMS to {number} saying ""Hello {name}, welcome"", then create a task titled ""Contacts greeted"" in the Tasks app."
21,Context Transition,English,"['Markor', 'arduia Pro Expense']","In Markor, open ""receipt.md"" and read the transactions listed in CSV format. Then add each transaction as a new expense in the arduia pro expense app.","In Markor, open ""receipt.md"" and read the transactions listed in CSV format. Then add each transaction as a new expense in the arduia pro expense app."
22,Context Transition,English,"['Markor', 'Simple Calendar Pro']","Read the content of ""meeting_notes.md"" in Markor to find the next meeting date. Then in Simple Calendar Pro app, create an event on that date at 14h, titled ""Follow-up Meeting"", lasting 60 mins, with description ""Based on Markor notes"".","Read the content of ""meeting_notes.md"" in Markor to find the next meeting date. Then in Simple Calendar Pro app, create an event on that date at 14h, titled ""Follow-up Meeting"", lasting 60 mins, with description ""Based on Markor notes""."
23,Context Transition,English,"['Joplin', 'Simple SMS Messenger']",Check the quantity of "sugar" needed for the recipe "Chocolate Cake" in the Joplin app. Then send a text message to [Phone Number 1] with that exact quantity in Simple SMS Messenger.,Check the quantity of "sugar" needed for the recipe "Chocolate Cake" in the Joplin app. Then send a text message to 5551234 with that exact quantity in Simple SMS Messenger.
24,Context Transition,English,"['Broccoli Recipe App', 'Tasks App']",Check how many ingredients are in the recipe 'Pumpkin Soup' in the Broccoli recipe app; then open the Tasks app and create a new task titled 'Buy all ingredients for Pumpkin Soup' with a high priority and include the exact ingredients in the description.,Check how many ingredients are in the recipe 'Pumpkin Soup' in the Broccoli recipe app; then open the Tasks app and create a new task titled 'Buy all ingredients for Pumpkin Soup' with a high priority and include the exact ingredients in the description.
25,Context Transition,English,"['OpenTracks', 'Markor']","Check most recent 'Running' activity distance in OpenTracks, then append that distance under today's date in ""WeeklyFitness.md"" in Markor.","Check most recent 'Running' activity distance in OpenTracks, then append that distance under today's date in ""WeeklyFitness.md"" in Markor."
26,Context Transition,English,"['Tasks App', 'Settings']","In the Tasks app, see if there is a task named [task_name]; if it exists, turn Bluetooth on in system Settings, otherwise turn Bluetooth off in system Settings.","In the Tasks app, see if there is a task named 'Update Firmware'; if it exists, turn Bluetooth on in system Settings, otherwise turn Bluetooth off in system Settings."
27,Context Transition,English,"['Simple Gallery Pro', 'arduia Pro Expense']",Add expenses from expenses.jpg in Simple Gallery Pro into arduia pro expense.,Add expenses from expenses.jpg in Simple Gallery Pro into arduia pro expense.
28,Context Transition,English,"['Joplin', 'Markor']","See if there is a to-do named [todo_name] marked as incomplete in Joplin; if it is incomplete, add 'Report is pending' Append 'Report is pending' to the end of ProjectStatus.md in Markor, otherwise do nothing.","See if there is a to-do named 'Submit Report' marked as incomplete in Joplin; if it is incomplete, add 'Report is pending' Append 'Report is pending' to the end of ProjectStatus.md in Markor, otherwise do nothing."
29,Context Transition,English,"['Markor', 'Simple SMS Messenger']",Create a note "Meeting Update.md" with text "Meeting rescheduled to 4 PM" in Markor and immediately share the content in plain text via Simple SMS Messenger to [Name 1].,Create a note "Meeting Update.md" with text "Meeting rescheduled to 4 PM" in Markor and immediately share the content in plain text via Simple SMS Messenger to Michael Brown.
30,Context Transition,English,"['Joplin', 'Simple Calendar Pro']","Check the Joplin note ""Birthdays"" to extract [Name 1]’s birthdate in YYYY‑MM‑DD format, then in Simple Calendar Pro, create an annual event titled ""[Name 1]’s Birthday"" on that date.","Check the Joplin note ""Birthdays"" to extract Alice’s birthdate in YYYY‑MM‑DD format, then in Simple Calendar Pro, create an annual event titled ""Alice’s Birthday"" on that date."
31,Context Transition,English,"['Simple SMS Messenger', 'Simple Calendar Pro']","Check the conversation with ""[Name 1]"" in Simple SMS Messenger to extract the training session date; then in Simple Calendar Pro, schedule an event titled ""Training Session"" on that date.","Check the conversation with ""HR"" in Simple SMS Messenger to extract the training session date; then in Simple Calendar Pro, schedule an event titled ""Training Session"" on that date."
32,Context Transition,English,"['Simple SMS Messenger', 'Joplin']","Check the conversation with ""[Name 1]"" in Simple SMS Messenger to extract the latest order number, then create a note ""OrderRecord"" in Joplin that logs the extracted order number.","Check the conversation with ""Vendor B"" in Simple SMS Messenger to extract the latest order number, then create a note ""OrderRecord"" in Joplin that logs the extracted order number."
33,Context Transition,English,"['Simple SMS Messenger', 'OsmAnd Maps']","Read the most recent text from '[Name 1]' in Simple SMS Messenger to extract the address included, then create a favorite location marker at that address using latitude and longtitude in the OsmAnd maps app.","Read the most recent text from 'John' in Simple SMS Messenger to extract the address included, then create a favorite location marker at that address using latitude and longtitude in the OsmAnd maps app."
34,Context Transition,English,['Simple SMS Messenger'],"Define a subworkflow ExtractAndForward: (1) Read the latest message from [Name 1] containing [keyword] in Simple SMS Messenger, (2) extract the substring following [keyword] up to the next space, then open Simple SMS Messenger and send that substring to [Name 2] with the prefix ""Info: "". Execute this subworkflow for: (sender = ""[Name 1]"", keyword = ""[keyword 1]"", recipient = ""[Name 2]"")","Define a subworkflow ExtractAndForward: (1) Read the latest message from {sender} containing {keyword} in Simple SMS Messenger, (2) extract the substring following {keyword} up to the next space, then open Simple SMS Messenger and send that substring to {recipient} with the prefix ""Info: "". Execute this subworkflow for: (sender = ""StoreXYZ"", keyword = ""promo code:"", recipient = ""Alice""), and (sender = ""HR"", keyword = ""session on"", recipient = ""TeamLead"")"
35,Context Transition,English,"['Tasks App', 'Simple Calendar Pro']","Define a subworkflow TaskDueToCalendar: (1) Locate the task titled [task] in the Tasks app, (2) extract its due date, (3) Schedule an event titled [task] on the extracted date in Simple Calendar Pro. Then execute TaskDueToCalendar for: (task = ""[task 1]""), (task = ""[task 2]""), (task = ""[task 3]"")","Define a subworkflow TaskDueToCalendar: (1) Locate the task titled {task} in the Tasks app, (2) extract its due date, (3) Schedule an event titled {task} on the extracted date in Simple Calendar Pro. Then execute TaskDueToCalendar for: (task = ""Submit Report""), (task = ""Team Meeting""), (task = ""Budget Review"")"
36,Context Transition,English,"['File Manager', 'Chrome']","Open the file task.html in Downloads in the file manager; when prompted open it with Chrome. Then click the button 5 times, remember the numbers displayed, and enter their product in the form.","Open the file task.html in Downloads in the file manager; when prompted open it with Chrome. Then click the button 5 times, remember the numbers displayed, and enter their product in the form."
37,Context Transition,English,"['Broccoli App', 'Pro Expense App', 'Calendar']","I want to cook Vegetable Stir Fry and Pasta Primavera. Check both recipes in the Broccoli app to get all the ingredients required. Check the detail pages of all the shopping-related expenses in the full expense list in Pro Expense app to derive the monthly shopping expense so far and determine which ingredients still need to be purchased. Then, create a new event for tomorrow in the Calendar with the title: ""Buy the following ingredients: {INGREDIENTS}"", where {INGREDIENTS} should be replaced with the actual list of ingredients that remain to be purchased. In the event description, also include: ""Monthly shopping expenses so far: $X"", where X is the total amount already spent on food this month according to the expense app.","I want to cook Vegetable Stir Fry and Pasta Primavera. Check both recipes in the Broccoli app to get all the ingredients required. Check the detail pages of all the shopping-related expenses in the full expense list in Pro Expense app to derive the monthly shopping expense so far and determine which ingredients still need to be purchased. Then, create a new event for tomorrow in the Calendar with the title: ""Buy the following ingredients: {INGREDIENTS}"", where {INGREDIENTS} should be replaced with the actual list of ingredients that remain to be purchased. In the event description, also include: ""Monthly shopping expenses so far: $X"", where X is the total amount already spent on food this month according to the expense app."
38,Context Transition,English,"['Joplin', 'Expense Pro', 'Markor']","Your task is to compile a weekly expense report. You should review the ""Week_Resolution"" note in the Joplin app which contains 3 key expense tracking guidelines. And you need to examine the expense records in Expense Pro app to identify all expense categories and amounts. After examining the expense resolution and records, create a new note in Markor named ""Weekly_Summary.md"". This summary should contain a markdown table listing each expense type and its current status. Conclude the summary with two resolution statements: ""The resolution for each type of expense: {flag1}"" and ""The resolution for total expense: {flag2}"" - where flag1 and flag2 should be set to either True or False based on your analysis of whether the expenses meet the resolution guidelines.","Your task is to compile a weekly expense report. You should review the ""Week_Resolution"" note in the Joplin app which contains 3 key expense tracking guidelines. And you need to examine the expense records in Expense Pro app to identify all expense categories and amounts. After examining the expense resolution and records, create a new note in Markor named ""Weekly_Summary.md"". This summary should contain a markdown table listing each expense type and its current status. Conclude the summary with two resolution statements: ""The resolution for each type of expense: {flag1}"" and ""The resolution for total expense: {flag2}"" - where flag1 and flag2 should be set to either True or False based on your analysis of whether the expenses meet the resolution guidelines."
39,Context Transition,English,"['OpenTracks', 'Tasks App']","In OpenTracks, retrieve all Running activities recorded between 5:00 AM and 9:00 AM during the past 7 days. Count the total number of morning runs and the total distance covered. Then, in the Tasks app, create a task titled ""Morning Run Goal: Last week [X] runs, [Y] mi — Target 5 runs this week"", replacing [X] and [Y] with the actual numbers.","In OpenTracks, retrieve all Running activities recorded between 5:00 AM and 9:00 AM during the past 7 days. Count the total number of morning runs and the total distance covered. Then, in the Tasks app, create a task titled ""Morning Run Goal: Last week [X] runs, [Y] mi — Target 5 runs this week"", replacing [X] and [Y] with the actual numbers."
40,Context Transition,English,['Markor'],"In Markor, open 'Groceries.md', 'Supplies.md', and 'PartyItems.md'. Each file contains items with quantities in '- ItemName (X)' format, one item per line, where X is the quantity. Calculate the total quantity of each unique item across all three lists. Create a new note 'PopularItems.md' listing all items sorted by total quantity (highest to lowest). Format each line exactly as '- ItemName [N]' where N is the combined quantity.  End the note with a summary line 'Total unique items: X'.","In Markor, open 'Groceries.md', 'Supplies.md', and 'PartyItems.md'. Each file contains items with quantities in '- ItemName (X)' format, one item per line, where X is the quantity. Calculate the total quantity of each unique item across all three lists. Create a new note 'PopularItems.md' listing all items sorted by total quantity (highest to lowest). Format each line exactly as '- ItemName [N]' where N is the combined quantity.  End the note with a summary line 'Total unique items: X'."
41,Deep Dive,English,"['Joplin', 'Simple SMS Messenger']","Locate the ""Pancakes"" recipe in the Joplin app.  Note how much flour it calls for, then scale that amount up for a triple batch.  Finally, use Simple SMS Messenger to send the adjusted flour quantity to [Phone Number 1].","Locate the ""Pancakes"" recipe in the Joplin app.  Note how much flour it calls for, then scale that amount up for a triple batch.  Finally, use Simple SMS Messenger to send the adjusted flour quantity to 444111."
42,Deep Dive,English,"['Simple Gallery Pro', 'Markor']","Locate ""receipt.png"" in the Simple Gallery Pro, and transcribe the transactions into a new Markor note named ""receipt2025.md"" in CSV format with the header ""Date,Item,Amount"". Then sum all amounts and write that total at the bottom of the note.","Locate ""receipt.png"" in the Simple Gallery Pro, and transcribe the transactions into a new Markor note named ""receipt2025.md"" in CSV format with the header ""Date,Item,Amount"". Then sum all amounts and write that total at the bottom of the note."
43,Deep Dive,English,"['Joplin', 'Simple Calendar Pro']","Read the note 'TeamMeetings' in Joplin that lists multiple future meeting times, identify the earliest date and time,  then create an event at that slot titled 'Earliest Team Meeting' in Simple Calendar Pro.","Read the note 'TeamMeetings' in Joplin that lists multiple future meeting times, identify the earliest date and time,  then create an event at that slot titled 'Earliest Team Meeting' in Simple Calendar Pro."
44,Deep Dive,English,['Markor'],"Read the Markor note ""Feedback.md"" containing dozens of bullet‑point customer comments; perform sentiment analysis to count how many comments are positive versus negative, then in the same app, create a new note ""FeedbackSummary.md"" with the text ""Positive: X, Negative: Y"" where X and Y are the counts.","Read the Markor note ""Feedback.md"" containing dozens of bullet‑point customer comments; perform sentiment analysis to count how many comments are positive versus negative, then in the same app, create a new note ""FeedbackSummary.md"" with the text ""Positive: X, Negative: Y"" where X and Y are the counts."
45,Deep Dive,English,"['Broccoli Recipe App', 'Simple Calendar Pro', 'Simple SMS Messenger']","Find the recipe ""Pasta Salad"" in the Broccoli recipe app to extract its preparation time in minutes, then retrieve the start time of your next event today in Simple Calendar Pro, calculate whether the cooking time fits before that event, and in Simple SMS Messenger, send ""Enough Time"" if it fits or ""Not Enough Time"" otherwise to ""Time Checker"".","Find the recipe ""Pasta Salad"" in the Broccoli recipe app to extract its preparation time in minutes, then retrieve the start time of your next event today in Simple Calendar Pro, calculate whether the cooking time fits before that event, and in Simple SMS Messenger, send ""Enough Time"" if it fits or ""Not Enough Time"" otherwise to ""Time Checker""."
46,Deep Dive,English,"['Simple SMS Messenger', 'Simple Calendar Pro']","Read the latest invitation message from ""[Name 1]"" containing an event date and time in Simple SMS Messenger, extract that date/time, then open Simple Calendar Pro to check for any event or task at that time; reply ""Will Attend"" in Simple SMS Messenger if no conflict or ""Cannot Attend"" if there is a conflict.","Read the latest invitation message from ""EventOrg"" containing an event date and time in Simple SMS Messenger, extract that date/time, then open Simple Calendar Pro to check for any event or task at that time; reply ""Will Attend"" in Simple SMS Messenger if no conflict or ""Cannot Attend"" if there is a conflict."
47,Deep Dive,English,"['Simple SMS Messenger', 'Markor']","Read the latest message from ""[Name 1]"" containing a true/false question at the end in Simple SMS Messenger; consult the Markor note ""survey_context.md"" for context, determine whether the answer is ""True"" or ""False"", then reply with that single word.","Read the latest message from ""SurveyBot"" containing a true/false question at the end in Simple SMS Messenger; consult the Markor note ""survey_context.md"" for context, determine whether the answer is ""True"" or ""False"", then reply with that single word."
48,Deep Dive,English,"['arduia Pro Expense', 'Markor']","Check the expenses in arduia pro expense and sum all ""Travel"" expenses from this month, then in Markor create a note ""TravelBudgetStatus.md"" with the single line ""Over Budget"" if the sum exceeds 500 or ""Within Budget"" otherwise.","Check the expenses in arduia pro expense and sum all ""Travel"" expenses from this month, then in Markor create a note ""TravelBudgetStatus.md"" with the single line ""Over Budget"" if the sum exceeds 500 or ""Within Budget"" otherwise."
49,Deep Dive,English,"['Joplin', 'Markor']","Find the note ""Budget vs Expense.md"" in Joplin. This note contains a CSV table with budget Categories, Planned amounts, and Actual amounts. Calculate the Variance (Actual minus Planned) for each category. Identify the single category with the largest positive variance (highest overspend). Then create a new note named ""budget_variance_report.md"" in Markor with EXACTLY the following format: # Budget Variance Report Category: [CATEGORY_NAME] Planned: $[PLANNED_AMOUNT] Actual: $[ACTUAL_AMOUNT] Variance: $[VARIANCE_AMOUNT] The [CATEGORY_NAME] category has the highest overspend. Replace the placeholders with the appropriate values, maintaining the exact formatting shown. Use 2 decimal places for all monetary values preceded by a dollar sign. For example, if Travel is the category with highest overspend, with planned $500.00, actual $591.15, and variance $91.15, the final report should show those exact values.","Find the note ""Budget vs Expense.md"" in Joplin. This note contains a CSV table with budget Categories, Planned amounts, and Actual amounts. Calculate the Variance (Actual minus Planned) for each category. Identify the single category with the largest positive variance (highest overspend). Then create a new note named ""budget_variance_report.md"" in Markor with EXACTLY the following format: # Budget Variance Report Category: [CATEGORY_NAME] Planned: $[PLANNED_AMOUNT] Actual: $[ACTUAL_AMOUNT] Variance: $[VARIANCE_AMOUNT] The [CATEGORY_NAME] category has the highest overspend. Replace the placeholders with the appropriate values, maintaining the exact formatting shown. Use 2 decimal places for all monetary values preceded by a dollar sign. For example, if Travel is the category with highest overspend, with planned $500.00, actual $591.15, and variance $91.15, the final report should show those exact values."
50,Deep Dive,English,"['Markor', 'Simple Calendar Pro']","Define a subworkflow ExtractDeadline: (1) read Markor note {file} and extract all dates following ""Deadline:"", (2) choose the earliest; then execute ExtractDeadline for: (file = ""[File 1]""), (file = ""[File 2]""), (file = ""[File 3]"") and after each run schedule an event ""Deadline for [file]"" on the extracted date in Simple Calendar Pro.","Define a subworkflow ExtractDeadline: (1) read Markor note {file} and extract all dates following ""Deadline:"", (2) choose the earliest; then execute ExtractDeadline for: (file = ""ProjectPlan.md""), (file = ""Roadmap.md""), (file = ""Goals.md""), and after each run schedule an event ""Deadline for {file}"" on the extracted date in Simple Calendar Pro."
